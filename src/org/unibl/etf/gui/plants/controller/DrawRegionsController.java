package org.unibl.etf.gui.plants.controller;

import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;

import org.unibl.etf.dao.interfaces.DAOFactory;
import org.unibl.etf.dto.Region;
import org.unibl.etf.gui.view.base.BaseController;

import com.itextpdf.text.BaseColor;

import javafx.event.Event;
import javafx.event.EventHandler;
import javafx.fxml.FXML;

import javafx.scene.layout.AnchorPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Polygon;
import javafx.scene.shape.Polyline;
import javafx.scene.input.MouseEvent;

import javafx.scene.Group;
import javafx.scene.control.Button;

public class DrawRegionsController extends BaseController {
	@FXML
	private AnchorPane parentPane;
	@FXML
	private Group elements;
	@FXML
	private Button btnSave;
	private double sX, sY, eX, eY;
	private Polygon selected = null;
	private Color defColor = new Color(0.9, 0.9, 0.9, 1);
	private Color green = new Color(0, 0.9, 0, 1);
	private List<Region> regions = new ArrayList<>();
	// Event Listener on AnchorPane[#parentPane].onMouseClicked
	@FXML
	public void click(MouseEvent event) {
		// TODO Autogenerated
	}
	@FXML
	public void save(Event event) {
		for(Region reg : regions) {
			DAOFactory.getInstance().getRegionDAO().insert(reg);
		}
	}
	// Event Listener on AnchorPane[#parentPane].onMousePressed
	@FXML
	public void press(MouseEvent event) {
		sX = event.getSceneX();
		sY = event.getSceneY() - 40;
	}

	// Event Listener on AnchorPane[#parentPane].onMouseReleased
	@FXML
	public void release(MouseEvent event) {
		eX = event.getSceneX();
		eY = event.getSceneY() - 40;
		Polygon p = new Polygon();
		Polyline pl = new Polyline();
		p.setOnMouseClicked(new EventHandler<Event>() {

			@Override
			public void handle(Event event) {
				System.out.println("Malinaa");
			}
		});
		pl.getPoints().addAll(new Double[] { sX, sY, eX, sY, eX, eY, sX, eY, sX, sY });
		p.getPoints().addAll(new Double[] { sX, sY, eX, sY, eX, eY, sX, eY });
		p.setFill(new Color(0.9, 0.9, 0.9, 1));
		elements.getChildren().add(pl);
		elements.getChildren().add(p);
		Region reg = new Region(null, 0, null, 1, new Double[] { sX, sY, eX, sY, eX, eY, sX, eY });
		regions.add(reg);
	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		List<Region> regions = DAOFactory.getInstance().getRegionDAO().selectAll();
		for(Region r : regions) {
			Polygon p = new Polygon();
			p.getPoints().addAll(r.getCoords());
			Polyline pl = new Polyline();
			pl.getPoints().addAll(r.getCoords());
			pl.getPoints().add(r.getCoords()[0]);
			pl.getPoints().add(r.getCoords()[1]);
			p.setFill(new Color(0.9, 0.9, 0.9, 1));
			elements.getChildren().add(pl);
			elements.getChildren().add(p);
			p.setOnMouseClicked(new EventHandler<Event>() {

				@Override
				public void handle(Event event) {
					if(selected != null) {
						selected.setFill(defColor);
					}
					selected = p;
					selected.setFill(green);
				}
			});
		}
	}
}
